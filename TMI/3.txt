<<<<<<< HEAD
* 혹시라도 학습에 대한 주도권을 본인이 가지고 있지 않고, 다른 누군가(외부의 영향, 페어프로그래밍 상대 등)가 가지고 있다면 점점 할 건 많아 보이고, 다급해져서 흥미가 떨어질 수 있다.
* **학습의 주도권은 꼭 본인이 가져가자.**
* 그런 성향을 가진 친구들이 빠르게 성장하는 경우가 많더라, 시키는대로만 하다보면 흥미를 잃고 재미가 없어지고 결국 자존감이 떨어질 수 있다.
* 어떤 식으로 학습하는게 맞는지 본인만의 학습법을 찾아보자.
* 어떤 식으로 학습하는게 맞는지 본인만의 학습법을 찾아보자.

### 좋은 문화를 가진 회사가 개발자에게 요구하는 역량은?

* 꾸준히 학습하고 성장하기 위한 노력
* 프로그래밍 자체에 대한 열정
* 다른 사람이 읽기 좋은 클린코드, 유지보수하기 좋은 코드를 구현하는 능력
  * SI에서 오래 일하다 보면 유지보수는 뒤로 한채 찍어내기 위해 개발하는 습관이 생긴다. 과거에는 이렇게 일을 많이 했을지 모르겠지만,
  * 이제는 하나의 소프트웨어를 가지고 상당히 오랜기간 사용자와 피드백을 받으면서 유지보수와 기능 업데이트를 해 나가면서 서비스(소프트웨어)가 성공해 나갈 수 있다는 것이 어느정도 증명 되었고, 업계도 이것을 깨닫고 있다.
  * 자사 소프트웨어를 가지고 오랜시간 사용자와 소통한 회사는 빨리 만드는 것 보다, 일정 수준 이상이 되면 유지보수하는 능력이 중요하다.
  * SI에서는 이런 역량을 기르기 힘들다. 유지보수 역량을 가진 개발자들을 찾기 힘들다.
  * 누군가가 만들어 놓은 소프트웨어를 안정적으로 유지보수 하는게 0에서 새로 만드는 것 보다 몇 배 더 어렵다.
  * 본인은 유지보수를 잘하는 개발자가 정말 역량이 뛰어난 개발자라고 생각한다.
  * 대부분의 인하우스 개발을 하는 회사들은 이런 역량을 가진 개발자를 더 중요하게 생각한다.
    * 코드 품질에 대한 관심, 클린 코드를 구현할 수 있는 능력
* 다른 사람들과 원활히 소통하고, 팀워크를 만들어갈 수 있는 협업 능력
  * 요즘 회사들이 오랜시간 같은 소프트웨어를 개발하다 보니까, 같은 팀원으로 오랜시간 함께 소통하 문제를 개선해 나가려면 협업 능력이 중요하다
  * 과거보다 서비스의 복잡도라던가, 풀어야 할 문제들의 복잡도가 많이 높아졌다.
  * 한 두명의 개발자가 해결하는게 아니라, 팀 단위의 여러명이 문제를 풀어 나간다.
  * 프로그래밍 역량은 뛰어나지만, 협업 능력(소통, 태도, 배려, 자세)이 떨어지는 개발자와 프로그래밍 열략은 좀 떨어지지만 성장하려고 하고, 협업능력이 좋은 개발자가 있다면, 본인은 후자를 채용할 것이다.
  * 회사들이 점점 더 그런 성향이 강해진다.
  * 프로그래밍 역량을 가지고 있는 것은 기본이고, 소프트 스킬을 가지고 있는 개발자를 요구하고 있다.
* 자기 주도적으로 문제를 해결하는 능력
  * 자기가 현제 프로젝트나 개발에 문제를 찾고 스스로 개선해 나가는 개발자를 요구하는 경향이 강하다.
* 위의 역량들을 어떻게 쌓아 나갈 것인가?
  * 꾸준한 학습, 성장, 프로그래밍에 대한 열정
    * 의지력보다는 환경(상황)을 바꿔 꾸준한 학습과 성장을 했는지가 중요하다.
    * 의지력이 강해도 환경이 따라주지 않으면 변화를 만들기 힘들다.
    * 야근하고, 주말근무 하는 환경에서 짬짬이 시간내서 역량을 쌓는 다는 것은 엄청난 의지력이 필요하다. 하지만 환경을 바꾸는게 더 빠른 변화와 성장을 만들 수 있다.
  * 다른 사람이 읽기 좋은 클린코드, 유지보수하기 좋은 코드를 구현하는 능력
    * 굉장히 쌓기 힘든 능력이지만 현업에서는 이 능력을 원한다.
    * 오랜시간 해야 조금씩 쌓여서 만들어 낼 수 있는 능력이다.
    * 평생에 걸쳐서 연습해야되는 역량이다.
    * 목적 의식이 있는 연습을 해야된다.
    * 의식적으로 계속 클린코드를 만드는 능력을 기르자!
  * 다른 사람들과 원활히 소통하고, 팀워크를 만들어갈 수 있는 협업 능력
    * 주니어일 때 좋은 문화를 가진 팀 속에서 일해보는 경험
      * 잘못된 습관이 좋은 습관으로 바뀔 수 있는 기회
      * 소프트 스킬을 기를 수 있는 회사를 찾아가자
    * 커뮤니티 스터디 활동을 통해 다른 사람들과 소통하는 연습
  * 자기 주도적으로 문제를 해결하는 능력
    * 프로그래밍을 대하는 자세, 삶을 대하는 자세에 변화
    * 전문가인 프로그래머로서 "나는 어떻게 일할 것인가?" 에 대한 고민
    * 주니어때 부터 조금씩 연습해서 길러나가자!
  * 세 가지 역량 모두 기존의 학습 방식으로 키울 수 있는 역량이 아니다
  * 지금까지 가지고 있던 직업, 일, 삶에 대한 선입견에 의구심을 가지고 접근해보자.
* 위 역량중 가장 핵심이 되는 역량이 무엇일까?
  * 본인은 자기 주도적으로 문제를 해결하는 능력이라고 생각한다.
  * 주변에서 발생하는 문제를 해결하려면 성장, 클린코드, 소통, 협업에 관심을 가질 수 밖에 없다.
* 누군가가 변화를 만들기를 기대하지 말고, 내가 주도적으로 변화를 만들 때이다.
  * 실패해도 괜찮다.
  * 실패하기 전보다 나는 한 단계 성장한다.
  * 도전에서 작은 성공들을 거쳐가면서 차근차근 올라가보자.

작성 규칙
폴더와 파일명은 영문으로 작성한다.
해당 문서를 다시 봤을 때, 추가적인 검색의 비용이 들지 않도록 자세히 기록한다.
더 많은 공유를 원하는 기록은 블로그에 포스팅한다.
쉴 땐 확실히 쉬고, contributions를 초록색으로 채우는 것에 집착하지 않는다.
reference를 명시하고, 원작자가 참고를 허용하는 자료만 사용한다.
=======
제목 : 구글서치엔진

구글 검색 엔진 최적화는 기본 검색 결과에만 영향을 미칩니다.
구글 애드워즈와 같은 유료광고 결과에는 영향을 미치지 않습니다.

# SEO의 기초
	명확하고 독창적인 타이틀을 사용해야 합니다.
	<title>태그를 이용하여 페이지의 제목 나타내기
	각각의 페이지마다 고유한 제목을 만드는 것이 이상적이다.
	<title>태그의 내용은 검색결과에 반영됩니다.
	=> title 태그의 콘텐츠는 주로 검색 결과의 첫 번째 행에 나타납니다.
	=> 사용자의 검색어가 제목에 있다면 해당 단어는 굵게 강조되어 나타납니다.
	
### title 태그를 위한 권장 사항
	-페이지의 콘텐츠를 정확하게 설명하는 제목

	-페이지마다 고유한 title 태그 작성

	-간결하면서 내용을 포함한 제목 작성
 

# “description” 메타 태그 활용하기
<meta name=”description=” content=”비몬의 유아용품 세상은 다양한 유아용 제품을 이용자
여러분께 최상의 가격으로 판매 및 대여 가능하도록 항상 보유하고 있습니다. 또한 새로운 유아
용품 안내 및 유익한 육아 정보를 제공합니다.”>
	-페이지에 description 메타 태그를 사용하면 Google 및 다른
검색 엔진에서 페이지 정보의 요약 내용을 볼 수 있습니다
	-Description 메타 태그는 Google검색에서, 결과 페이지 내용
미리보기(snippet)로 사용할 수도 있으므로 중요합니다
	-오픈 디렉토리 프로젝트(Open Directory Project)
목록에 있는 경우 Google이 이 목록에 있는 사이트 설명을
사용할 수도 있습니다

### description 태그를 위한 권장 사항
검색결과에서 description 메타 태그를 내용 미리보기로 보게되므로, 사용자에게 정보를
제공하고 동시에 관심을 유도할 수 있도록 작성합니다.
	-페이지의 내용을 정확하게 요약하기
	-각 페이지마다 내용에 맞는 고유한 설명 사용
	
	
# 페이지의 URL 구조를 개선하기
### 이해하기 쉬운 URL은 콘텐츠의 내용을 전달하는데 좋습니다  
-검색 엔진이 문서를
크롤링하기도 쉬워집니다
-특히 URL에 알 수 없는
매개변수가 많이 표시된 경우에, 사용자는 URL의 일부분이
불필요하다고 생각하여, 링크시 일부분을 빠뜨려 링크가 깨질
수도 있습니다
-. URL에 연관된 단어가 들어 있는 경우에는
ID 또는 이상한 이름의 매개변수가 들어 있는 경우보다 사용자와
검색 엔진에 페이지에 대한 더 많은 정보를 제공합니다

### URL은 검색 결과에 보여지게 됩니다 (단순한 URL 구조 유지)
-페이지의 URL은 Google 검색결과의 일부로 제목과
내용 미리보기 중간에 표시됩니다


# URL 구조를 위한 권장사항

### URL에 단어 사용
### 단순 디렉토리 구조 만들기
### 특정 문서에 도달하기 위한 한 가지 형태의 URL 제공

# 사이트 내에서 이동하기 쉽게 만들기
### 검색 엔진에게 사이트 내의 이동은 매우 중요합니다
### 홈페이지를 기반으로 한 이동 경로계획하기
### ‘사이트 이동 경로’의 사용으로 방문자에게 편리를 제공하기
	-사용자가 URL의 일부를 제거하는 경우
발생할 상황을 고려합니다
	-실제 사용자와 검색엔진을 위한 두
종류의 사이트맵 준비하기
	-자연스러운 계층 구조 만들기 (지나치게 세분화하면 안됨)
	-이동 경로를 위해 텍스트 링크를 사용 
	
# 우수한 품질의 콘텐츠와 서비스 제공
=> Google Search Console 을 잘 이용하자.

	-읽기 편안한 내용 및 구성
	-주제에서 벗어나지 않게 구성
	-새롭고 고유한 콘텐츠 작성
	-검색 엔진을 위한 것이 아닌 사용자를 위한 콘텐츠 작성
	
# 보다 나은 앵커 텍스트 작성 
	-적절한 앵커 텍스트를 사용하면 연결된
내용을 보다 쉽게 전달할 수 있습니다

### 앵커 텍스트를 위한 권장 사항
	-내용을 함축하는 텍스트 선택
	-간결한 텍스트 작성
	-링크를 눈에 띄기 쉽게 포맷하기
	-내부 링크에 앵커 텍스트 활용을 고려하기
	
### 이미지 사용의 최적화
	-이미지 관련 정보는 “alt” 속성을
이용해 제공할 수 있습니다
	-이미지 파일을 도메인 내의 수많은 디렉토리와 하위 디렉토리에
분 산 시 키 는 대 신 이 미 지 를 단 일 디 렉 토 리 ( 예 :
bmonsbabyworld.com/images/)에 통합하는 것을 고려해
보십시오. 그러면 이미지의 경로가 간소화됩니다.

### 이미지 사용을 위한 권장 사항
	-간결하면서도 설명적인 파일 이름과 alt 텍스트의 활용
	-이미지를 링크로 사용할 때 alt 텍스트를 제공하기
	-이미지 사이트맵 제공하기
	
# 제목 태그의 적절한 활용(h1~)
	-제목 태그를 활용하여 중요부분 강조
	-계층 구조가 있으면 문서 이용하기 편리
	-제목 태그는 내용의 개요를 작성하는 작업
	-한 페이지 안 제목 태그 신중하게 사용
	
# robot.txt를 효과적으로 활용하기(해당 사이트의 루트 디렉토리에 있어야 합니다)
	-검색에 노출이 필요하지 않은 부분은 robot.txt로 제어하기

### robot.txt를 효과적으로 이용하기
	-robots.txt 를 보안 도구로 사용하지 않기
	-민감한 콘텐츠는 보다 안전한 방법 사용하기
	-웹마스터를 위한 무료 도구 사용하기


# rel="nofollow" 링크 속성 사용시 유의
	-<a href="http://www.shadyseo.com" rel="nofollow">스팸성 링크</a>
	-"nofollow"를 사용하여 스팸 댓글을
방지합니다
	-nofollow의 또 다른 용도는 콘텐츠를 작성할 때 웹사이트는
참조하고 싶지만 인지도를 전달하고 싶지는 않은 경우입니다. 
	-

# Google 에게 모바일용 사이트 알리기

# 모바일 사용자 정확하게 안내하기
	-두 버전을 운영하는데 있어서, 사용자를 위해 내용이 최대한
일치하도록 콘텐츠를 작성하여야 합니다(1).	

# 웹사이트를 올바르게 홍보하기
	- 사이트의 인지도를 높이기 위한
의도적인 백링크의 활용은 피합니다 -> 새 콘텐츠를 효과적으로
홍보하면 같은 주제에 관심이 있는 사람들에게 더 빨리 전달될
것입니다
	
	-> 블로그를 통해 새로운 소식을 공지
하고 오프라인을 통해 웹사이트 주소를
홍보합니다
>>>>>>> c10dbfd163ef39441845ee710522c5c2d8bcf298
