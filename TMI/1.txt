비전공자를 위한 이해할 수 있는 IT지식 - 최원영

ch1. 오리엔테이션
ch2. 프로그래밍 언어 & 운영체제
ch3. 네트워크, 클라이언트, 서버
ch4. API와 JSON
ch5. 애플리케이션 
ch6. 웹
ch7.데이터베이스와 이미지처리
ch8. 프레임워크와 라이브러리
ch9. 협업, 소스관리 , 디자인
ch10. 정리

테이블(데이터베이스) : 관계형 데이터베이스와 플랫 파일 뎅이터베이스에서 테이블은 세로줄과 가로줄의 모델을 이용하여 정렬된 데이터 집합의 모임이다.

만약 IT산업에서 자동차를 만들고 싶다면, 자동차의 완벽한 기획에서 출발해선 안 됩니다. 왜냐하면 지금 떠올린 자동차의 모습이 6개월, 1년 뒤에도 완벽한 자동차의 모습이라고 장담할 수 없으니까요.


늘 변화하는 IT산업에서 가장 중요한 것은 협업이다. 협업을 잘하기 위해서는 잘 소통해야 한다. 이 바탕에는 IT 기본적인 용어의 이해가 선행되어야 한다. 

그럼 저 수준 언어는 어디서 사용할까요? 요즘 컴퓨터는 다 빠른데, 왜 저수준 언어로 코딩을 할까요? 그 이유는 컴퓨터 사양을 낮추고 싶어서입니다. 그래야 컴퓨터
가격이 저렴해지니깐요. IPTV 생각해보세요. IPTV는 설치비는 아주 저렴하거나 무료입니다. 대신 월 사용로를 받죠. ...


개발 1:"~님, 이거 원래 POST로 보냈을 때는 200이 날아왔거든요. 그런데 PUT으로 바뀐 다음에 500이 날라와요."
개발 2: "그래요 잠시만요!" (파악 후) "서버 수정했어요. 근데 클라에서 보내주는 JSON에 필수 파라미터가 빠져있네요. 그렇게 다시 보내면 400이 날아갈거에요. 확인부탁드려요."


CRUD
Create : 생성한다. ->POST
Read : 불러온다. -> GET
Update : 바꾼다. -> PUT(전체), PATCH(일부)
Delete : 지운다. -> DELETE
CRUD관점에서 데이터를 바라봐야 한다. 이렇게 CRUD 별로 주소가 생긴다. ... 사람들은 좀 더 체계적으로 API를 관리하고 싶어 했고 그 영향으로 조금 더 체계적인 API라는
사회 운동이 만들어집니다. 그런 API를 REST(Representational State Transfer)한 API 즉, RESTFul API라고 부릅니다.

서버의 관점
Read -> 200번대 (잘 됐어)
     -> 400번대, 500번대 (잘 안 됐어)
     400번대 : 요청이 이상해
     500번대 : 서버가 이상해
     
'클라와 서버는 요청과 응답을 주고받고, 그떄 필요한 데이터들을 JSON 형식으로 주고 받는다"

왜 네이버는 서버의 기능을 개발자들이 쓸 수 있게 열어놓았을까요?(Open API)
여러 이유가 있겠지만, Open API를 이용하면 자신들의 영향력이 올라간다. 영향력은 힘이자 돈이다.

'반응형 웹'
PC, 모바일, 태블릿에서 화면이 잘려서 보이는 문제가 있었다. '반응형 웹'이란 브라우저의 가로 넓이에 '반응'하여 구성요소가 변하는 기술을 말한다.

데이터는 단 1%의 결점도 없어야 한다. 그래서 데이터를 관리하는게 어렵다. 이 속성을 데이터의 무결성 이라고 한다. 데이터 관리의 주요 방법론 중 하나가 관계형 데이터베이스 이다.

현업에서 일하다보면, 디자이너와 개발자가 갈등을 겪는 경우가 많다. 왜 유독 이 둘사이에 갈등이 많은 걸까요?
디자이너는 주로 포토샵과 일러스트를 사용해 작업을 한다. 하지만 이 두 프로그램은 애플리케이션이나 웹 다지안에 최적화된 프로그램이 아니다.
개발자는 요소의 넓이, 높이, X축으로 부터 얼마나 떨어져 있는지 등의 수치를 하나씩 파악해야 하는 불편함이 생긴다. 이런 툴에 익숙치 않은 개발자가 작업을 하다보니
시간이 오래걸리고 종종 실수가 나온다. 때로는 디자인이 개발과정에서 다르게 구현되는 일이 생기기도 햇다. 이때의 책임은 온전히 개발자.

이에 개발자들은 가이드를 요구했다. ... 요소 위에 요소가 있는 경우, 그림자가 생길 경우 등 각 사안에 대해 개발자가 이것을 어떻게 처리해야 하는지 하나하나
설명하는 게 보통 어려운 일이 아니다. 또한 어느정도까지 자세하게 줘야하는지도 애매한다. ... 시간은 점점 늦어지고 디자이너는 정작 디자인 작업에 드는 시간보다 
가이드를 만들고 수정하는 데 드는 시간이 많아집니다. 그렇게 개발자와 디자이너는 조금씩 멀어집니다.
갈등관리에는 다양한 방법이 있지만, 효과적인 방법 중 하나는 둘을 조금 떨어뜨려 놓는 것입니다. ... 그런 시도가 등장했죠. 바로 "스케치, 재플린, XD' 등의 프로그램입니다.

안타깝게도 정답은 없습니다. 결국 협업해야 합니다. ... 서로의 분야에 대한 공부가 필요합니다. 상대에 대한 배려가 더해진다면 더 좋겠죠.